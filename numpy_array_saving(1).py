# -*- coding: utf-8 -*-
"""Numpy array saving(1).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xXF22TZKM5iwqVnHv4-9XZ-WXQuYEKIC
"""

import os
import cv2
import numpy as np
from glob import glob

import matplotlib.pyplot as plt
from PIL import Image

def resize_image(image_array, size=(512, 256)):
    image = cv2.cvtColor(image_array, cv2.COLOR_BGR2RGB)
    return cv2.resize(image, size)

def normalize_image(image):
    return image / 255.0

cities = ['aachen', 'bochum', 'bremen', 'cologne', 'darmstadt', 'dusseldorf', 'erfurt', 'hamburg', 'hanover', 'jena', 'krefeld', 'monchengladbach', 'strasbourg', 'stuttgart', 'tubingen', 'ulm', 'weimar', 'zurich']
val_cities = ['frankfurt', 'lindau', 'munster']
test_cities = ['berlin', 'bielefeld', 'bonn', 'leverkusen', 'mainz', 'muniech']

a = 0
b = 0
c = 0
rawTrain = []
rawVal = []
rawTest = []

im = glob(f'D:\\Datasets\\leftImg8bit ALL\\leftImg8bit\\train\\aachen\\*.png')
for k in im:
    rawTrain.append(normalize_image(resize_image(cv2.imread(k), (512, 256))))
    a = a + 1

    # elif i == 'val':
    #     for j in val_cities:
    #         im = glob(f'D:\\Datasets\\leftImg8bit ALL\\leftImg8bit\\{i}\\{j}\\*.png')
    #         for k in im:
    #             rawVal.append(normalize_image(resize_image(cv2.imread(k), (512, 256))))
    #             b = b + 1
    # else:
    #     for j in test_cities:
    #         im = glob(f'D:\\Datasets\\leftImg8bit ALL\\leftImg8bit\\{i}\\{j}\\*.png')
    #         for k in im:
    #             rawTest.append(normalize_image(resize_image(cv2.imread(k), (512, 256))))
    #             c = c + 1

# print(a, b, c, '=', a+b+c)
print(a)
np.save('rawTrain.npy', rawTrain)
# np.save('rawVal.npy', rawVal)
# np.save('rawTest.npy', rawTest)

print(len(rawTrain))
rawTrain = []

im = glob(f'D:\\Datasets\\leftImg8bit ALL\\leftImg8bit\\train\\bochum\\*.png')
for k in im:
    rawTrain.append(normalize_image(resize_image(cv2.imread(k), (512, 256))))
    a = a + 1

existing_data = np.load('rawTrain.npy')

updated_data = np.concatenate((existing_data, rawTrain))

np.save('rawTrain.npy', updated_data)

print(len(rawTrain))
rawTrain = []
existing_data = []
updated_data = []

im = glob(f'D:\\Datasets\\leftImg8bit ALL\\leftImg8bit\\train\\bremen\\*.png')
for k in im:
    rawTrain.append(normalize_image(resize_image(cv2.imread(k), (512, 256))))
    a = a + 1

np.save('rawTrain.npy', np.concatenate((np.load('rawTrain.npy'), rawTrain)))

print(len(rawTrain))
rawTrain = []

im = glob(f'D:\\Datasets\\leftImg8bit ALL\\leftImg8bit\\train\\cologne\\*.png')
for k in im:
    rawTrain.append(normalize_image(resize_image(cv2.imread(k), (512, 256))))
    a = a + 1

np.save('rawTrain.npy', np.concatenate((np.load('rawTrain.npy'), rawTrain)))
print(len(rawTrain))
rawTrain = []

im = glob(f'D:\\Datasets\\leftImg8bit ALL\\leftImg8bit\\train\\darmstadt\\*.png')
for k in im:
    rawTrain.append(normalize_image(resize_image(cv2.imread(k), (512, 256))))
    a = a + 1

np.save('rawTrain.npy', np.concatenate((np.load('rawTrain.npy'), rawTrain)))
print(len(rawTrain))
rawTrain = []

im = glob(f'D:\\Datasets\\leftImg8bit ALL\\leftImg8bit\\train\\dusseldorf\\*.png')
for k in im:
    rawTrain.append(normalize_image(resize_image(cv2.imread(k), (512, 256))))
    a = a + 1

np.save('rawTrain.npy', np.concatenate((np.load('rawTrain.npy'), rawTrain)))
print(len(rawTrain))
rawTrain = []

print(len(np.load('rawTrain.npy')))

im = glob(f'D:\\Datasets\\leftImg8bit ALL\\leftImg8bit\\val\\frankfurt\\*.png')
test_arr = normalize_image(resize_image(cv2.imread(im[1]), (512, 256)))
arr = []
arr.append(test_arr)
test_arr = np.array(arr)

test_arr.shape

np.save('test1.npy', test_arr)

